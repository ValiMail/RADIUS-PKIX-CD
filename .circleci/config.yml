version: 2.1

workflows:
  version: 2
  test_integration:
    jobs:
      - "test_freeradius":
        filters:
            tags:
              only: /.*/

jobs:
  "test_freeradius":
    docker:
      - image: cimg/python:3.8
    environment:
      RADIUS_EE_CRYPTO: /etc/freeradius/ee_crypto
      RADIUS_CLIENT_CRYPTO: /etc/freeradius/client_crypto
      FREERADIUS_AKI_MAPPING_FILE: /etc/freeradius/aki_map.txt
      FREERADIUS_TRUST_MAP: /etc/freeradius/trust_map.json
      EAPOL_BIN: /home/circleci/project/wpa_supplicant-2.9/wpa_supplicant/eapol_test
      LEGIT_CERT_PATH: tests/ca2/ecc.air-quality-sensor._device.example.net.cert.pem
      ILLEGIT_CERT_PATH: tests/ca1/ecc.air-quality-sensor._device.example.net.cert.pem
      TRUSTED_CLIENT_CA_FILE: /etc/freeradius/certs/ca-certificates-combined.crt
      CA1_PEMFILE: /etc/freeradius/certs/ca1.cert.pem
      CA2_PEMFILE: /etc/freeradius/certs/ca2.cert.pem
      CA1_CN: Example Networks CA1
      CA2_CN: Example Networks CA1
      EAPOL_CONFIG_DIR: ./tests/configs/eapol_test
      FREERADIUS3_CONFIG_DIR: ./tests/configs/freeradius
      SSL_CONFIG_DIR: ./tests/configs/ssl
      WPA_BUILD_CONFIG_DIR: ./tests/configs/wpa_build
      TEST_DEPENDENCIES_DIR: ./tests/dependencies
      TEST_SCRIPTS_BASE: ./tests/scripts
    # CA1 is the illegitimate CA, CA2 is the one we trust.
    steps:
      - checkout
      - run:
          name: Install deps
          command: |
              cat /etc/lsb-release
              sudo apt-get update && sudo apt-get upgrade -y
              sudo sh -c 'echo "deb http://packages.networkradius.com/freeradius-3.0/ubuntu/focal focal main" >> /etc/apt/sources.list'
              curl -s 'https://packages.networkradius.com/pgp/packages%40networkradius.com' | sudo tee /etc/apt/trusted.gpg.d/packages.networkradius.com.asc > /dev/null
              sudo apt-get update
              cat ${TEST_DEPENDENCIES_DIR}/os_packages | sudo xargs apt-get install 
              sudo chmod 755 ${TEST_SCRIPTS_BASE}/generate_crypto.sh
      - run:
          name: Build eapol_test
          command: |
              sudo wget https://w1.fi/releases/wpa_supplicant-2.9.tar.gz -O wpa_supplicant-2.9.tar.gz
              sudo tar -zxf ./wpa_supplicant-2.9.tar.gz
              sudo -E cp ${WPA_BUILD_CONFIG_DIR}/wpa_build_config.conf ./wpa_supplicant-2.9/wpa_supplicant/.config
              cd wpa_supplicant-2.9/wpa_supplicant && sudo make eapol_test && sudo make && sudo make install
      - run:
          name: Generate PKI 1
          command: |
              ls -l
              export ORIGIN=${PWD}
              export CA_CN=${CA1_CN}
              sudo -E sh -c '${TEST_SCRIPTS_BASE}/generate_crypto.sh'
              cd ${ORIGIN}
              mkdir -p tests/ca1
              sudo mv ${HOME}/export/* tests/ca1 
              sudo rm -rf ${HOME}/crypto
              sudo chown -R `whoami` ${HOME}
      - run:
          name: Generate PKI 2
          command: |
              ls -l
              export ORIGIN=${PWD}
              export CA_CN=${CA2_CN}
              sudo -E sh -c '${TEST_SCRIPTS_BASE}/generate_crypto.sh'
              cd ${ORIGIN}
              mkdir -p tests/ca2
              sudo mv ${HOME}/export/* tests/ca2 
              sudo chown -R `whoami` ${HOME}
      - run:
          name: Install radius_pkix_cd
          command: |
              sudo pip3 install -e .
              pkix_cd_manage_trust -h
              pkix_cd_verify -h
      - run:
          name: Test radius_pkix_cd
          command: |
              pip3 install .
              pip3 install -r tests/dependencies/requirements-test.txt
              python3 -m py.test --cov=radius_pkix_cd --cov-report=xml --cov-report=term-missing ./tests/integration/
      - run:
          name: Set Freeradius config
          command: |
            sudo cp ${FREERADIUS3_CONFIG_DIR}/eap-tls /etc/freeradius/mods-enabled/eap
            sudo cp ${FREERADIUS3_CONFIG_DIR}/default /etc/freeradius/sites-enabled
      - run:
          name: Set keys and certs
          command: |
            sudo -E mkdir -p ${RADIUS_EE_CRYPTO}
            sudo -E mkdir -p ${RADIUS_CLIENT_CRYPTO}
            # Move RADIUS server keypair
            sudo -E cp tests/ca1/rsa.air-quality-sensor._device.example.net.key.pem ${RADIUS_EE_CRYPTO}/radius_ee.key
            sudo -E cp tests/ca1/rsa.air-quality-sensor._device.example.net.cert.pem ${RADIUS_EE_CRYPTO}/radius_ee.crt
            # Move RADIUS client keypair
            sudo -E cp tests/ca2/ecc.air-quality-sensor._device.example.net.key.pem ${RADIUS_CLIENT_CRYPTO}/client_ee.key
            sudo -E cp tests/ca2/ecc.air-quality-sensor._device.example.net.cert.pem ${RADIUS_CLIENT_CRYPTO}/client_ee.crt
            # Append CA certs to EE certs
            sudo -E sh -c 'cat tests/ca1/ca.example.net.cert.pem >> ${RADIUS_EE_CRYPTO}/radius_ee.crt'
            # sudo -E sh -c 'cat tests/ca2/ca.example.net.cert.pem >> ${RADIUS_CLIENT_CRYPTO}/client_ee.crt'
            sudo -E sh -c 'cat tests/ca1/ca.example.net.cert.pem > ${RADIUS_CLIENT_CRYPTO}/ca-certificates.crt'
            # Copy CA certs to the Freeradius certs dir
            sudo -E sh -c 'cp tests/ca1/ca.example.net.cert.pem ${CA1_PEMFILE}'
            sudo -E sh -c 'cp tests/ca2/ca.example.net.cert.pem ${CA2_PEMFILE}'
            # Combine our CA certs into one file for the RADIUS server
            ## sudo -E sh -c 'cat ${CA1_PEMFILE} > ${TRUSTED_CLIENT_CA_FILE}'
            ## sudo -E sh -c 'cat ${CA2_PEMFILE} >> ${TRUSTED_CLIENT_CA_FILE}'
            sudo ls /etc/freeradius/certs/
            ## sudo -E sh -c 'cat ${TRUSTED_CLIENT_CA_FILE}'
            # Rehash the certs
            sudo sh -c 'cd /etc/freeradius/certs && sudo c_rehash ./'
            # Peek at what we've done...
            echo "RADIUS EE crypto dir: ${RADIUS_EE_CRYPTO}"
            sudo -E ls ${RADIUS_EE_CRYPTO}
            echo "RADIUS client crypto dir: ${RADIUS_CLIENT_CRYPTO}"
            sudo ls -lah ${RADIUS_CLIENT_CRYPTO}
            cat ${LEGIT_CERT_PATH}
            cat ${ILLEGIT_CERT_PATH}
            whoami
            echo "RADIUS key and cert:"
            sudo -E chown -R freerad:freerad ${RADIUS_EE_CRYPTO}
            sudo -E chown -R circleci ${RADIUS_CLIENT_CRYPTO}
            sudo -E ls -lah ${RADIUS_CLIENT_CRYPTO}
            sudo -E ls -lah ${RADIUS_EE_CRYPTO}
            
      - run:
          name: Simulate PKIX-CD sync
          command: |
            echo "Get the legit AKI"
            export LEGIT_AKI=`openssl x509 -noout -text -in ${LEGIT_CERT_PATH} | grep -A1 "X509v3 Authority Key Identifier" | tail -1 | sed -e 's/keyid://g' -e 's/[[:space:]]//g'`
            echo "Get the legit DNS name" 
            export LEGIT_DNSNAME=`openssl x509 -noout -text -in ${LEGIT_CERT_PATH} | grep -A1 "X509v3 Subject Alternative Name" | head -2 | tail -1 | sed -e 's/DNS://g' -e 's/[[:space:]]//g'`
            echo "Legit: ${LEGIT_DNSNAME} ${LEGIT_AKI}"
            echo "CA certificate metadata:"
            echo "${CA1_PEMFILE}"
            openssl x509 -noout -text -in ${CA1_PEMFILE}
            echo "${CA2_PEMFILE}"
            openssl x509 -noout -text -in ${CA2_PEMFILE}
            sudo -E touch ${FREERADIUS_AKI_MAPPING_FILE}
            sudo ls /etc/freeradius/
            export FIRST_LINE="${LEGIT_DNSNAME}|${LEGIT_AKI}"
            echo "Gonna write ${FIRST_LINE} to ${FREERADIUS_AKI_MAPPING_FILE}"
            sudo -E sh -c 'echo "${FIRST_LINE}" > "${FREERADIUS_AKI_MAPPING_FILE}"'
            echo "Freeradius identity to authority mapping:"
            sudo -E cat ${FREERADIUS_AKI_MAPPING_FILE}
            sudo -E python3 ${TEST_SCRIPTS_BASE}/create_testing_trust_map.py --ssid=SSID1 --dnsname=${LEGIT_DNSNAME} --aki=${LEGIT_AKI} --outfile=${FREERADIUS_TRUST_MAP} --cert_path=${LEGIT_CERT_PATH}
      - run:
          name: Start Freeradius server and test eapol
          command: |
            mkdir -p /tmp/radiusd
            sudo chown freerad:freerad /tmp/radiusd
            sudo freeradius -X &
            sleep 5
            which pkix_cd_verify
            echo "\n\n\n>>>>>>>>>>>>>>\nTesting good config, expect success."
            sudo -E sh -c '${EAPOL_BIN} -c ${EAPOL_CONFIG_DIR}/eapol_test.conf -s testing123 -r 1 -N 30:s:00-00-00-00-00-01:SSID1'
            echo "\n\n\n>>>>>>>>>>>>>>>\nTesting AKI misalignment (cross-domain signing) config. Expect failure."
            echo ">>>>This test fails because the identity name and AKI do not align."
            sudo -E sh -c '${EAPOL_BIN} -c ${EAPOL_CONFIG_DIR}/eapol_test_fail.conf -s testing123 -r 1 -N 30:s:00-00-00-00-00-01:SSID1' || exit 0
      - run:
          name: Print configs
          command: |
            cat ${FREERADIUS_TRUST_MAP}
